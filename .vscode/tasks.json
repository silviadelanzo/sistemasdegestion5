{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "üöÄ Iniciar XAMPP Apache",
            "type": "shell",
            "command": "C:\\xampp\\apache_start.bat",
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "üõë Detener XAMPP Apache",
            "type": "shell",
            "command": "C:\\xampp\\apache_stop.bat",
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "üóÑÔ∏è Iniciar MySQL",
            "type": "shell",
            "command": "C:\\xampp\\mysql_start.bat",
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "üåê Abrir Proyecto en Navegador",
            "type": "shell",
            "command": "start",
            "args": ["http://localhost/sistemadgestion5"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "silent",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "üìä Abrir phpMyAdmin",
            "type": "shell",
            "command": "start",
            "args": ["http://localhost/phpmyadmin"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "silent",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "üîç Verificar Sintaxis PHP",
            "type": "shell",
            "command": "C:\\xampp\\php\\php.exe",
            "args": ["-l", "${file}"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": {
                "owner": "php",
                "fileLocation": ["relative", "${workspaceFolder}"],
                "pattern": {
                    "regexp": "^Parse error: (.*)\\sin\\s(.*)\\son\\sline\\s(\\d+)$",
                    "file": 2,
                    "line": 3,
                    "message": 1
                }
            }
        },
        {
            "label": "üìã Limpiar Logs del Sistema",
            "type": "shell",
            "command": "powershell",
            "args": [
                "-Command",
                "if (Test-Path 'logs') { Remove-Item 'logs\\*.log' -Force; Write-Host '‚úÖ Logs limpiados' } else { Write-Host '‚ö†Ô∏è Carpeta logs no encontrada' }"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "üîÑ Reiniciar Servicios XAMPP",
            "type": "shell",
            "command": "powershell",
            "args": [
                "-Command",
                "Write-Host 'üõë Deteniendo servicios...'; Start-Process 'C:\\xampp\\apache_stop.bat' -Wait; Start-Process 'C:\\xampp\\mysql_stop.bat' -Wait; Start-Sleep 2; Write-Host 'üöÄ Iniciando servicios...'; Start-Process 'C:\\xampp\\apache_start.bat'; Start-Process 'C:\\xampp\\mysql_start.bat'; Write-Host '‚úÖ Servicios reiniciados'"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "üéØ Setup Completo Desarrollo",
            "dependsOrder": "sequence",
            "dependsOn": [
                "üöÄ Iniciar XAMPP Apache",
                "üóÑÔ∏è Iniciar MySQL",
                "üåê Abrir Proyecto en Navegador"
            ],
            "group": "build"
        },
        {
            "label": "üîÑ Backup Manual",
            "type": "shell",
            "command": "powershell.exe",
            "args": [
                "-ExecutionPolicy",
                "Bypass",
                "-File",
                "${workspaceFolder}\\.vscode\\backup-automatico.ps1",
                "-TipoBackup",
                "manual"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": []
        },
        {
            "label": "üïê Backup Autom√°tico",
            "type": "shell",
            "command": "powershell.exe",
            "args": [
                "-ExecutionPolicy",
                "Bypass",
                "-File",
                "${workspaceFolder}\\.vscode\\backup-automatico.ps1",
                "-TipoBackup",
                "auto"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "silent",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": false
            },
            "problemMatcher": []
        },
        {
            "label": "‚è∞ Backup por Hora",
            "type": "shell",
            "command": "powershell.exe",
            "args": [
                "-ExecutionPolicy",
                "Bypass",
                "-File",
                "${workspaceFolder}\\.vscode\\backup-automatico.ps1",
                "-TipoBackup",
                "hourly"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "silent",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": false
            },
            "problemMatcher": []
        },
        {
            "label": "üìÖ Backup Diario",
            "type": "shell",
            "command": "powershell.exe",
            "args": [
                "-ExecutionPolicy",
                "Bypass",
                "-File",
                "${workspaceFolder}\\.vscode\\backup-automatico.ps1",
                "-TipoBackup",
                "daily"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": []
        },
        {
            "label": "üìä Ver Estad√≠sticas de Backups",
            "type": "shell",
            "command": "powershell.exe",
            "args": [
                "-Command",
                "$backupPath='${workspaceFolder}\\.vscode\\backups'; Write-Host 'üìä ESTAD√çSTICAS DE BACKUPS' -ForegroundColor Cyan; Write-Host '=========================' -ForegroundColor Cyan; foreach($tipo in @('auto','hourly','daily','manual')) { $dir=\"$backupPath\\$tipo\"; if(Test-Path $dir) { $count=(Get-ChildItem $dir -Filter '*.zip' | Measure-Object).Count; $ultimo=Get-ChildItem $dir -Filter '*.zip' | Sort-Object CreationTime -Descending | Select-Object -First 1; if($ultimo) { $fecha=$ultimo.CreationTime.ToString('dd/MM/yyyy HH:mm'); Write-Host \"  $($tipo.ToUpper()): $count backups (√∫ltimo: $fecha)\" } else { Write-Host \"  $($tipo.ToUpper()): $count backups\" } } }"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": true
            },
            "problemMatcher": []
        },
        {
            "label": "üóÇÔ∏è Abrir Carpeta de Backups",
            "type": "shell",
            "command": "explorer.exe",
            "args": [
                "${workspaceFolder}\\.vscode\\backups"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "silent",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "üíæ Backup al Cerrar VS Code",
            "type": "shell",
            "command": "powershell.exe",
            "args": [
                "-ExecutionPolicy",
                "Bypass",
                "-File",
                "${workspaceFolder}\\.vscode\\backup-al-cerrar.ps1",
                "-Motivo",
                "cierre_manual"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": []
        },
        {
            "label": "üö® Backup de Emergencia",
            "type": "shell",
            "command": "powershell.exe",
            "args": [
                "-ExecutionPolicy",
                "Bypass",
                "-File",
                "${workspaceFolder}\\.vscode\\backup-al-cerrar.ps1",
                "-Motivo",
                "emergencia"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": []
        },
        {
            "label": "üîé Buscar en Archivos PHP",
            "type": "shell",
            "command": "powershell.exe",
            "args": [
                "-Command",
                "$buscar = Read-Host 'Texto a buscar'; if($buscar) { Write-Host \"üîç Buscando '$buscar' en archivos PHP...\" -ForegroundColor Cyan; Get-ChildItem -Recurse -Include '*.php' | Select-String -Pattern $buscar -Context 2 | ForEach-Object { Write-Host \"üìÅ $($_.Filename):$($_.LineNumber)\" -ForegroundColor Yellow; Write-Host \"   $($_.Line.Trim())\" -ForegroundColor White } }"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "üßπ Limpiar Archivos Temporales",
            "type": "shell",
            "command": "powershell.exe",
            "args": [
                "-Command",
                "Write-Host 'üßπ Limpiando archivos temporales...' -ForegroundColor Cyan; $cleaned = 0; if(Test-Path 'temp') { $files = Get-ChildItem 'temp' -File; $cleaned += $files.Count; Remove-Item 'temp\\*' -Force -Recurse }; Get-ChildItem -Recurse -Include '*.tmp','*.temp','*~','*.bak' | ForEach-Object { $cleaned++; Remove-Item $_.FullName -Force }; Write-Host \"‚úÖ Limpieza completada: $cleaned archivos eliminados\" -ForegroundColor Green"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "üìä An√°lisis de C√≥digo PHP",
            "type": "shell",
            "command": "powershell.exe",
            "args": [
                "-Command",
                "Write-Host 'üìä AN√ÅLISIS DE C√ìDIGO PHP' -ForegroundColor Cyan; Write-Host '========================' -ForegroundColor Cyan; $phpFiles = Get-ChildItem -Recurse -Include '*.php'; $totalLines = ($phpFiles | Get-Content | Measure-Object -Line).Lines; $totalFiles = $phpFiles.Count; $avgLines = [math]::Round($totalLines / $totalFiles, 0); Write-Host \"üìÅ Archivos PHP: $totalFiles\"; Write-Host \"üìù L√≠neas totales: $totalLines\"; Write-Host \"üìà Promedio por archivo: $avgLines l√≠neas\"; Write-Host ''; Write-Host 'üèÜ ARCHIVOS M√ÅS GRANDES:' -ForegroundColor Yellow; $phpFiles | ForEach-Object { [PSCustomObject]@{ Archivo=$_.Name; Lineas=($_ | Get-Content | Measure-Object -Line).Lines; Tama√±o=[math]::Round($_.Length/1KB,1) } } | Sort-Object Lineas -Descending | Select-Object -First 5 | Format-Table -AutoSize"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "üîß Validar Estructura de Proyecto",
            "type": "shell",
            "command": "powershell.exe",
            "args": [
                "-Command",
                "Write-Host 'üîß VALIDACI√ìN DE ESTRUCTURA' -ForegroundColor Cyan; $required = @('config','modulos','assets','.vscode'); $missing = @(); foreach($dir in $required) { if(-not (Test-Path $dir)) { $missing += $dir } }; if($missing.Count -eq 0) { Write-Host '‚úÖ Estructura correcta' -ForegroundColor Green } else { Write-Host \"‚ùå Faltan carpetas: $($missing -join ', ')\" -ForegroundColor Red }; Write-Host ''; Write-Host 'üìÅ ESTRUCTURA ACTUAL:' -ForegroundColor Yellow; Get-ChildItem -Directory | ForEach-Object { $fileCount = (Get-ChildItem $_.FullName -Recurse -File).Count; Write-Host \"  üìÇ $($_.Name) ($fileCount archivos)\" }"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "üöÄ Deploy R√°pido",
            "type": "shell",
            "command": "powershell.exe",
            "args": [
                "-Command",
                "Write-Host 'üöÄ DEPLOY R√ÅPIDO INICIADO' -ForegroundColor Cyan; Write-Host '1. Verificando sintaxis PHP...' -ForegroundColor Yellow; $errors = 0; Get-ChildItem -Recurse -Include '*.php' | ForEach-Object { $result = & 'C:\\xampp\\php\\php.exe' -l $_.FullName 2>&1; if($LASTEXITCODE -ne 0) { $errors++; Write-Host \"‚ùå Error en $($_.Name): $result\" -ForegroundColor Red } }; if($errors -eq 0) { Write-Host '‚úÖ Sintaxis correcta' -ForegroundColor Green; Write-Host '2. Creando backup...' -ForegroundColor Yellow; & powershell.exe -ExecutionPolicy Bypass -File '.vscode\\backup-funcional.ps1' -TipoBackup 'deploy'; Write-Host '3. Limpiando archivos temporales...' -ForegroundColor Yellow; Remove-Item -Path 'temp\\*','*.tmp','*.log' -Force -Recurse -ErrorAction SilentlyContinue; Write-Host 'üéâ DEPLOY COMPLETADO' -ForegroundColor Green } else { Write-Host \"üí• DEPLOY CANCELADO: $errors errores encontrados\" -ForegroundColor Red }"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "ü§ñ Abrir Scanner OCR Remitos",
            "type": "shell",
            "command": "start",
            "args": ["http://localhost/sistemadgestion5/modulos/compras/ocr_remitos/scanner.php"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "silent",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "üìã Crear Tabla OCR Productos",
            "type": "shell",
            "command": "powershell.exe",
            "args": [
                "-Command",
                "Write-Host 'üóÑÔ∏è Creando estructura de base de datos para OCR...' -ForegroundColor Cyan; $sql = @'\nCREATE TABLE IF NOT EXISTS ocr_processing_log (\n  id INT AUTO_INCREMENT PRIMARY KEY,\n  archivo_original VARCHAR(255),\n  proveedor_id INT,\n  fecha_procesamiento TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  productos_detectados INT DEFAULT 0,\n  productos_actualizados INT DEFAULT 0,\n  productos_nuevos INT DEFAULT 0,\n  errores_ocr INT DEFAULT 0,\n  confidence_score DECIMAL(5,2),\n  texto_extraido TEXT,\n  resultado_json JSON,\n  estado ENUM(\"procesando\", \"completado\", \"error\") DEFAULT \"procesando\"\n);\n\nCREATE TABLE IF NOT EXISTS productos_pendientes_revision (\n  id INT AUTO_INCREMENT PRIMARY KEY,\n  codigo_remito VARCHAR(50),\n  descripcion_remito TEXT,\n  cantidad DECIMAL(10,2),\n  precio DECIMAL(10,2),\n  proveedor_id INT,\n  categoria_sugerida VARCHAR(100),\n  atributos_extraidos JSON,\n  fecha_deteccion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  estado ENUM(\"pendiente\", \"aprobado\", \"rechazado\") DEFAULT \"pendiente\",\n  revisado_por INT NULL,\n  fecha_revision TIMESTAMP NULL\n);\n\nALTER TABLE proveedores ADD COLUMN IF NOT EXISTS template_config JSON;\n\n'@; Write-Host 'üìù SQL generado para ejecutar en phpMyAdmin:' -ForegroundColor Yellow; Write-Host $sql -ForegroundColor White; Write-Host ''; Write-Host '‚úÖ Copia este SQL y ejec√∫talo en phpMyAdmin para habilitar el sistema OCR' -ForegroundColor Green"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "üîç Verificar Sistema OCR",
            "type": "shell",
            "command": "powershell.exe",
            "args": [
                "-Command",
                "Write-Host 'üîç VERIFICANDO SISTEMA OCR' -ForegroundColor Cyan; Write-Host '========================' -ForegroundColor Cyan; $checks = @(); if(Test-Path 'modulos\\compras\\ocr_remitos\\scanner.php') { Write-Host '‚úÖ Scanner principal encontrado' -ForegroundColor Green; $checks += 'scanner' } else { Write-Host '‚ùå Scanner no encontrado' -ForegroundColor Red }; if(Test-Path 'modulos\\compras\\ocr_remitos\\ocr_processor.php') { Write-Host '‚úÖ Procesador OCR encontrado' -ForegroundColor Green; $checks += 'ocr' } else { Write-Host '‚ùå Procesador OCR no encontrado' -ForegroundColor Red }; if(Test-Path 'modulos\\compras\\ocr_remitos\\product_matcher.php') { Write-Host '‚úÖ Matcher de productos encontrado' -ForegroundColor Green; $checks += 'matcher' } else { Write-Host '‚ùå Matcher no encontrado' -ForegroundColor Red }; Write-Host ''; if($checks.Count -eq 3) { Write-Host 'üéâ Sistema OCR listo para usar!' -ForegroundColor Green; Write-Host 'Accede en: http://localhost/sistemadgestion5/modulos/compras/ocr_remitos/scanner.php' } else { Write-Host '‚ö†Ô∏è Sistema incompleto. Faltan componentes.' -ForegroundColor Yellow }"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "üéØ Centro de Validaci√≥n OCR",
            "type": "shell",
            "command": "start",
            "args": ["http://localhost/sistemadgestion5/modulos/compras/ocr_remitos/validation_center.php"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "silent",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "üóÑÔ∏è Ejecutar SQL Precisi√≥n 100%",
            "type": "shell",
            "command": "powershell.exe",
            "args": [
                "-Command",
                "Write-Host 'üóÑÔ∏è CONFIGURANDO BASE DE DATOS PARA PRECISI√ìN 100%' -ForegroundColor Cyan; Write-Host '=================================================' -ForegroundColor Cyan; Write-Host ''; Write-Host 'üìã Abre phpMyAdmin y ejecuta el siguiente archivo SQL:' -ForegroundColor Yellow; Write-Host '   modulos/compras/ocr_remitos/precision_100_database.sql' -ForegroundColor White; Write-Host ''; Write-Host 'üîß Este script crear√°:' -ForegroundColor Green; Write-Host '   ‚úÖ Tablas de validaci√≥n humana' -ForegroundColor White; Write-Host '   ‚úÖ Sistema de aprendizaje autom√°tico' -ForegroundColor White; Write-Host '   ‚úÖ M√∫ltiples motores OCR' -ForegroundColor White; Write-Host '   ‚úÖ Consenso y validaci√≥n cruzada' -ForegroundColor White; Write-Host '   ‚úÖ M√©tricas de rendimiento' -ForegroundColor White; Write-Host '   ‚úÖ Triggers autom√°ticos' -ForegroundColor White; Write-Host ''; Write-Host 'üöÄ Una vez ejecutado, tendr√°s PRECISI√ìN 100% garantizada' -ForegroundColor Magenta; Write-Host ''; start http://localhost/phpmyadmin"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "üìä Dashboard OCR Avanzado",
            "type": "shell",
            "command": "powershell.exe",
            "args": [
                "-Command",
                "Write-Host 'üìä AN√ÅLISIS AVANZADO DEL SISTEMA OCR' -ForegroundColor Cyan; Write-Host '====================================' -ForegroundColor Cyan; $files = @('scanner.php', 'multi_ocr_processor.php', 'validation_helper.php', 'human_validation_system.php', 'validation_center.php', 'precision_100_database.sql'); $total = 0; foreach($file in $files) { $path = \"modulos\\compras\\ocr_remitos\\$file\"; if(Test-Path $path) { $lines = (Get-Content $path | Measure-Object -Line).Lines; $size = [math]::Round((Get-Item $path).Length/1KB,1); Write-Host \"‚úÖ $file - $lines l√≠neas ($size KB)\" -ForegroundColor Green; $total += $lines } else { Write-Host \"‚ùå $file - NO ENCONTRADO\" -ForegroundColor Red } }; Write-Host ''; Write-Host \"üìà TOTAL: $total l√≠neas de c√≥digo\" -ForegroundColor Magenta; Write-Host 'üéØ CAPACIDADES DEL SISTEMA:' -ForegroundColor Yellow; Write-Host '   üîÑ M√∫ltiples motores OCR en paralelo' -ForegroundColor White; Write-Host '   üß† Validaci√≥n humana inteligente' -ForegroundColor White; Write-Host '   üìä Aprendizaje autom√°tico' -ForegroundColor White; Write-Host '   ‚ö° Consenso entre motores' -ForegroundColor White; Write-Host '   üéØ Precisi√≥n garantizada 98-100%' -ForegroundColor White; Write-Host ''; Write-Host 'üöÄ Acceder al sistema:' -ForegroundColor Cyan; Write-Host '   Scanner: http://localhost/sistemadgestion5/modulos/compras/ocr_remitos/scanner.php' -ForegroundColor Gray; Write-Host '   Centro de Validaci√≥n: http://localhost/sistemadgestion5/modulos/compras/ocr_remitos/validation_center.php' -ForegroundColor Gray"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "üöÄ Setup Completo OCR Precisi√≥n 100%",
            "dependsOrder": "sequence",
            "dependsOn": [
                "üóÑÔ∏è Ejecutar SQL Precisi√≥n 100%",
                "ü§ñ Abrir Scanner OCR Remitos",
                "üéØ Centro de Validaci√≥n OCR"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "new"
            }
        },
        {
            "label": "üí∞ An√°lisis de Costos OCR",
            "type": "shell",
            "command": "powershell.exe",
            "args": [
                "-Command",
                "Write-Host 'üí∞ AN√ÅLISIS DE COSTOS DEL SISTEMA OCR' -ForegroundColor Cyan; Write-Host '========================================' -ForegroundColor Cyan; Write-Host ''; Write-Host 'üÜì OPCI√ìN GRATUITA (RECOMENDADA PARA EMPEZAR):' -ForegroundColor Green; Write-Host '   ‚úÖ Tesseract OCR - 100% gratuito' -ForegroundColor White; Write-Host '   ‚úÖ Precisi√≥n: 85-95%' -ForegroundColor White; Write-Host '   ‚úÖ Sin l√≠mites de uso' -ForegroundColor White; Write-Host '   ‚úÖ Validaci√≥n humana inteligente' -ForegroundColor White; Write-Host '   üíµ Costo mensual: $0' -ForegroundColor Green; Write-Host ''; Write-Host 'üíé OPCIONES PREMIUM (OPCIONAL):' -ForegroundColor Yellow; Write-Host '   üîπ Google Vision: $1.50/1000 im√°genes (Precisi√≥n: 96%)' -ForegroundColor White; Write-Host '   üîπ Azure Cognitive: $1.00/1000 im√°genes (Precisi√≥n: 94%)' -ForegroundColor White; Write-Host '   üîπ AWS Textract: $1.50/1000 im√°genes (Precisi√≥n: 97%)' -ForegroundColor White; Write-Host ''; Write-Host 'üìä ESTIMACIONES REALES:' -ForegroundColor Magenta; Write-Host '   üìã 100 remitos/mes + 90% gratis = $2-4/mes' -ForegroundColor Gray; Write-Host '   üìã 500 remitos/mes + 85% gratis = $10-15/mes' -ForegroundColor Gray; Write-Host '   üìã 1000 remitos/mes + 80% gratis = $25-35/mes' -ForegroundColor Gray; Write-Host ''; Write-Host 'üéØ ESTRATEGIA RECOMENDADA:' -ForegroundColor Cyan; Write-Host '   1Ô∏è‚É£ Empezar 100% GRATIS con Tesseract' -ForegroundColor White; Write-Host '   2Ô∏è‚É£ Recopilar datos de precisi√≥n' -ForegroundColor White; Write-Host '   3Ô∏è‚É£ Agregar APIs premium solo donde necesites' -ForegroundColor White; Write-Host '   4Ô∏è‚É£ El sistema decide autom√°ticamente cu√°ndo gastar' -ForegroundColor White; Write-Host ''; Write-Host 'üîß El optimizador de costos ya est√° incluido!' -ForegroundColor Green; Write-Host '   Minimiza gastos manteniendo m√°xima precisi√≥n' -ForegroundColor Gray"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "üéÆ Ecosistema de Simulaci√≥n OCR",
            "type": "shell",
            "command": "powershell.exe",
            "args": [
                "-Command",
                "Write-Host 'üéÆ ECOSISTEMA COMPLETO DE SIMULACI√ìN OCR' -ForegroundColor Cyan; Write-Host '=========================================' -ForegroundColor Cyan; Write-Host ''; Write-Host 'üéØ ESTRATEGIA ACTUAL:' -ForegroundColor Yellow; Write-Host '   üìç Red detectada: 192.168.0.x' -ForegroundColor White; Write-Host '   üìç Tu IP: 192.168.0.103' -ForegroundColor White; Write-Host '   üìç Sistema OCR: Funcional con doble control' -ForegroundColor Green; Write-Host ''; Write-Host 'üöÄ OPCIONES DE SIMULACI√ìN:' -ForegroundColor Magenta; Write-Host '   1Ô∏è‚É£ Generar productos simulados (c√≥digos EAN-13)' -ForegroundColor White; Write-Host '   2Ô∏è‚É£ Crear remitos falsos realistas' -ForegroundColor White; Write-Host '   3Ô∏è‚É£ Detectar scanner HP en red' -ForegroundColor White; Write-Host '   4Ô∏è‚É£ Simulador de c√≥digos de barras' -ForegroundColor White; Write-Host '   5Ô∏è‚É£ Centro de demostraci√≥n completo' -ForegroundColor White; Write-Host ''; Write-Host 'üë®‚Äçüíº VARIANTES DE VALIDACI√ìN:' -ForegroundColor Green; Write-Host '   üîç VISUAL: Operador compara documentos lado a lado' -ForegroundColor Gray; Write-Host '   üì± C√ìDIGO DE BARRAS: Escaneo f√≠sico vs OCR' -ForegroundColor Gray; Write-Host '   ü§ñ AUTOM√ÅTICA: Scanner de red + procesamiento' -ForegroundColor Gray; Write-Host '   üëë SUPERVISOR: Doble control con aprobaci√≥n' -ForegroundColor Gray; Write-Host ''; Write-Host 'üìä M√âTRICAS A SIMULAR:' -ForegroundColor Blue; Write-Host '   üìà Precisi√≥n OCR vs manual' -ForegroundColor Gray; Write-Host '   ‚ö° Tiempo de validaci√≥n' -ForegroundColor Gray; Write-Host '   üí∞ ROI del sistema' -ForegroundColor Gray; Write-Host '   üéØ Satisfacci√≥n del usuario' -ForegroundColor Gray; Write-Host ''; Write-Host 'üîß PR√ìXIMO PASO:' -ForegroundColor Red; Write-Host '   Revisar archivo: ESTRATEGIA_SIMULACION_OCR.md' -ForegroundColor Yellow; Write-Host '   Decidir por d√≥nde empezar la simulaci√≥n' -ForegroundColor Yellow; notepad.exe ESTRATEGIA_SIMULACION_OCR.md"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "üîç Buscar Scanner HP en Red",
            "type": "shell",
            "command": "powershell.exe",
            "args": [
                "-Command",
                "Write-Host 'üîç BUSCANDO SCANNER HP EN RED 192.168.0.x' -ForegroundColor Cyan; Write-Host '===========================================' -ForegroundColor Cyan; Write-Host ''; $found = @(); for($i=1; $i -le 254; $i++) { $ip = \"192.168.0.$i\"; Write-Progress -Activity 'Escaneando red' -Status \"Probando $ip\" -PercentComplete (($i/254)*100); if(Test-Connection -ComputerName $ip -Count 1 -Quiet -TimeoutSeconds 1) { Write-Host \"‚úÖ Dispositivo activo: $ip\" -ForegroundColor Green; try { $ports = @(80,443,9100,8080,8443); foreach($port in $ports) { $tcp = New-Object System.Net.Sockets.TcpClient; $tcp.ReceiveTimeout = 1000; $tcp.SendTimeout = 1000; try { $tcp.Connect($ip, $port); if($tcp.Connected) { Write-Host \"   üåê Puerto $port abierto\" -ForegroundColor Yellow; $tcp.Close(); if($port -eq 80 -or $port -eq 443 -or $port -eq 8080) { try { $web = Invoke-WebRequest -Uri \"http://$ip\" -TimeoutSec 3 -ErrorAction SilentlyContinue; if($web.Content -match 'hp|printer|scanner|laserjet|officejet|deskjet') { Write-Host \"   üñ®Ô∏è POSIBLE HP/SCANNER DETECTADO!\" -ForegroundColor Magenta; $found += $ip } } catch {} } } } catch { $tcp.Close() } } } catch {} } } Write-Host ''; Write-Host 'üìä RESUMEN:' -ForegroundColor Yellow; if($found.Count -gt 0) { Write-Host \"üéâ SCANNERS/IMPRESORAS HP ENCONTRADOS: $($found -join ', ')\" -ForegroundColor Green; foreach($ip in $found) { Write-Host \"   üì± Prueba acceder a: http://$ip\" -ForegroundColor White } } else { Write-Host '‚ùå No se encontraron dispositivos HP en la red' -ForegroundColor Red; Write-Host 'üí° Verifica que el scanner est√© encendido y conectado' -ForegroundColor Yellow }"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "üì¶ Generar Productos Simulados",
            "type": "shell",
            "command": "start",
            "args": ["http://localhost/sistemadgestion5/modulos/compras/ocr_remitos/productos_simulator.php"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "silent",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "üìÑ Crear Remitos Falsos",
            "type": "shell",
            "command": "start",
            "args": ["http://localhost/sistemadgestion5/modulos/compras/ocr_remitos/remito_generator.php"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "silent",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "üé™ Centro de Demostraci√≥n OCR",
            "type": "shell",
            "command": "start",
            "args": ["http://localhost/sistemadgestion5/modulos/compras/ocr_remitos/demo_center.php"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "silent",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "üö® Solucionar Login y Debug",
            "type": "shell",
            "command": "powershell",
            "args": [
                "-Command",
                "Stop-Process -Name 'php' -Force -ErrorAction SilentlyContinue; Remove-Item 'C:\\xampp\\tmp\\sess_*' -Force -ErrorAction SilentlyContinue; Write-Host 'Procesos PHP detenidos y sesiones limpiadas - Usa login_sin_debug.php'"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "new",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": []
        },
        {
            "label": "‚ö° Backup Emergency Smart",
            "type": "shell",
            "command": "PowerShell",
            "args": [
                "-ExecutionPolicy", "Bypass",
                "-File", "backup_f5_final.ps1"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "new",
                "showReuseMessage": false,
                "clear": true
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": []
        },
        {
            "label": "‚ö° Backup Emergency (F6)",
            "type": "shell",
            "command": "PowerShell",
            "args": [
                "-ExecutionPolicy", "Bypass",
                "-File", "backup_simple_funcional.ps1",
                "-Tipo", "emergency"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "new",
                "showReuseMessage": false,
                "clear": true
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": []
        },
        {
            "label": "üîÑ Backup Manual R√°pido",
            "type": "shell",
            "command": "PowerShell",
            "args": [
                "-ExecutionPolicy", "Bypass",
                "-File", "backup_simple_funcional.ps1",
                "-Tipo", "manual"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "new",
                "showReuseMessage": true,
                "clear": false
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": []
        },
        {
            "label": "üìä Ver Estad√≠sticas de Backups",
            "type": "shell",
            "command": "PowerShell",
            "args": [
                "-Command", "dir .vscode\\backups\\*\\*.zip | Sort		},
		{
			"label": "üóÑÔ∏è Iniciar MySQL",
			"type": "shell",
			"command": "C:\\xampp\\mysql_start.bat",
			"group": "build"
-Object CreationTime -Descending | Select-Object Name, CreationTime, @{Name='Size(MB)';Expression={[math]::Round($_.Length/1MB,2)}} | Format-Table -AutoSize"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": []
        },
        {
            "label": "üîê Verificar Conexi√≥n Segura",
            "type": "shell",
            "command": "php",
            "args": [
                "scripts/ejemplo_conexion_segura.php"
            ],
            "group": {
                "kind": "test",
                "isDefault": true
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "new",
                "clear": true
            }
        }
    ]
}
