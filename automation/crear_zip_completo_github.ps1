# CREAR ZIP COMPLETO CON SQL PARA GITHUB
# Script final que incluye base de datos y todo el proyecto

Write-Host "Creando ZIP completo con SQL para GitHub..." -ForegroundColor Cyan

$fecha = Get-Date -Format "yyyy-MM-dd_HH-mm-ss"
$nombreProyecto = "sistemadgestion5"
$archivoZip = "github-completo-$nombreProyecto-$fecha.zip"

Write-Host "Creando ZIP completo: $archivoZip" -ForegroundColor Yellow

# Crear carpeta temporal para organizar archivos
$tempDir = "temp_github_completo_$fecha"
New-Item -ItemType Directory -Path $tempDir -Force | Out-Null

Write-Host "Copiando archivos del proyecto..." -ForegroundColor Yellow

# ARCHIVOS CORE ESENCIALES
Write-Host "  Archivos core del sistema..." -ForegroundColor Green
$coreFiles = @(
    "index.php",
    "login.php", 
    "logout.php",
    "menu_principal.php",
    "obtener_ultimo_codigo.php"
)

foreach ($file in $coreFiles) {
    if (Test-Path $file) {
        Copy-Item -Path $file -Destination $tempDir -Force
    }
}

# CARPETAS ESENCIALES
Write-Host "  Carpetas del sistema..." -ForegroundColor Green
$carpetasEsenciales = @("modulos", "config", "ajax", "assets")
foreach ($carpeta in $carpetasEsenciales) {
    if (Test-Path $carpeta) {
        Copy-Item -Path $carpeta -Destination $tempDir -Recurse -Force
    }
}

# ARCHIVOS DE GESTION
Write-Host "  Formularios y gestion..." -ForegroundColor Green  
# Archivos de gesti√≥n principales (p√°ginas de listado, etc.)
$gestionRootFiles = @(
    "proveedores.php", # Contiene el modal de proveedor
    "usuarios.php",
    "reportes.php" 
)

foreach ($file in $gestionRootFiles) {
    if (Test-Path $file) {
        Copy-Item -Path $file -Destination $tempDir -Force
    } else {
        Write-Host "    Advertencia: No se encontr√≥ el archivo de gesti√≥n '$file'" -ForegroundColor Yellow
    }
}

# Buscar archivos gestionar_*.php
Get-ChildItem -Name "gestionar_*.php" | ForEach-Object {
    Copy-Item -Path $_ -Destination $tempDir -Force
}

# ARCHIVOS DE REPORTES Y EXCEL
Write-Host "  Sistema de reportes..." -ForegroundColor Green
$reporteFiles = @("excel_nativo.php")
foreach ($file in $reporteFiles) {
    if (Test-Path $file) {
        Copy-Item -Path $file -Destination $tempDir -Force
    }
}

# Buscar archivos reporte_*.php
Get-ChildItem -Name "reporte_*.php" | ForEach-Object {
    Copy-Item -Path $_ -Destination $tempDir -Force
}

# COPIAR BASE DE DATOS
Write-Host "  Base de datos SQL..." -ForegroundColor Green
if (Test-Path "database") {
    Copy-Item -Path "database" -Destination $tempDir -Recurse -Force
    Write-Host "    Base de datos copiada" -ForegroundColor Gray
} else {
    Write-Host "    Advertencia: No se encontro carpeta database" -ForegroundColor Yellow
}

# DOCUMENTACION ESENCIAL
Write-Host "  Documentacion..." -ForegroundColor Green
New-Item -ItemType Directory -Path "$tempDir\docs" -Force | Out-Null
if (Test-Path "docs") {
    Copy-Item -Path "docs\*" -Destination "$tempDir\docs\" -Recurse -Force -ErrorAction SilentlyContinue
}

# CREAR ARCHIVOS ADICIONALES PARA GITHUB
Write-Host "  Creando archivos para GitHub..." -ForegroundColor Green

# .gitignore
$gitignore = @"
# Archivos de configuracion local
config/config_local.php
config/database_local.php

# Archivos temporales
*.tmp
*.temp
*~
*.bak

# Logs
logs/
*.log

# Uploads y archivos de usuario
assets/uploads/*
!assets/uploads/.gitkeep
assets/scanner_input/*
!assets/scanner_input/.gitkeep
assets/scanner_processed/*
!assets/scanner_processed/.gitkeep

# Backups locales
backup/
sql_backup/

# Archivos de desarrollo
.vscode/
docs_temp/

# Archivos del sistema
Thumbs.db
.DS_Store

# Archivos PHP temporales
*.php~

# Archivos de prueba
test_*.php
debug_*.php
verificar_*.php

# Archivos de configuracion espec√≠ficos del entorno
.env
.env.local
"@

$gitignore | Out-File -FilePath "$tempDir\.gitignore" -Encoding UTF8

# README.md mejorado para GitHub
$readmeGithub = @"
# üìä Sistema de Gesti√≥n Empresarial

![Version](https://img.shields.io/badge/version-2.0.0-blue.svg)
![PHP](https://img.shields.io/badge/PHP-8.1+-green.svg)
![MySQL](https://img.shields.io/badge/MySQL-8.0+-orange.svg)
![License](https://img.shields.io/badge/license-MIT-green.svg)

Sistema completo de gesti√≥n empresarial desarrollado en PHP con MySQL, que incluye m√≥dulos de inventario, compras, facturaci√≥n, clientes y administraci√≥n.

## üöÄ Caracter√≠sticas Principales

### üì¶ M√≥dulos Incluidos
- **üíº Administraci√≥n**: Gesti√≥n de usuarios, configuraci√≥n del sistema
- **üë• Clientes**: Registro y gesti√≥n completa de clientes
- **üõí Compras**: Sistema completo de compras y proveedores
- **üìÑ Facturaci√≥n**: Generaci√≥n y gesti√≥n de facturas
- **üìä Inventario**: Control de stock con esc√°ner de c√≥digos de barras
- **üìã Pedidos**: Gesti√≥n de pedidos y seguimiento
- **üè∑Ô∏è Productos**: Cat√°logo completo con 6 pesta√±as de informaci√≥n

### üéØ Funcionalidades Destacadas
- **üì± Esc√°ner Universal**: Webcam, celular, lector USB y entrada manual
- **üìà Reportes**: Exportaci√≥n a Excel y PDF
- **üîê Sistema de Permisos**: Control de acceso por roles
- **üí± Multi-moneda**: Soporte para m√∫ltiples monedas
- **üìä Dashboard**: Panel de control con m√©tricas
- **üîÑ AJAX**: Interfaz din√°mica y responsiva

## üõ†Ô∏è Tecnolog√≠as

- **Backend**: PHP 8.1+
- **Base de Datos**: MySQL 8.0+
- **Frontend**: Bootstrap 5.3, JavaScript ES6+
- **Librer√≠as**: HTML5-QRCode, jsPDF, PhpSpreadsheet
- **Servidor**: Apache/Nginx

## üìã Requisitos del Sistema

### Servidor Web
- PHP 8.1 o superior
- MySQL 8.0 o superior
- Apache 2.4+ o Nginx 1.18+

### Extensiones PHP Requeridas
```
php-mysql
php-pdo
php-gd
php-mbstring
php-curl
php-zip
php-xml
```

## üöÄ Instalaci√≥n R√°pida

### 1. Clonar el Repositorio
```bash
git clone https://github.com/tu-usuario/sistemadgestion5.git
cd sistemadgestion5
```

### 2. Configurar Base de Datos
```bash
# Crear la base de datos
mysql -u root -p -e "CREATE DATABASE sistemadgestion5;"

# Importar estructura y datos
mysql -u root -p sistemadgestion5 < database/sistemadgestion5_completo_*.sql
```

### 3. Configuraci√≥n
```php
// config/config.php
define('DB_HOST', 'localhost');
define('DB_NAME', 'sistemadgestion5');
define('DB_USER', 'tu_usuario');
define('DB_PASS', 'tu_password');
```

### 4. Permisos de Carpetas
```bash
chmod 755 assets/uploads/
chmod 755 assets/scanner_input/
chmod 755 assets/scanner_processed/
```

### 5. Acceder al Sistema
- **URL**: `http://tu-servidor/sistemadgestion5/`
- **Usuario**: admin
- **Contrase√±a**: admin

‚ö†Ô∏è **Cambiar las credenciales por defecto despu√©s del primer acceso**

## üìÅ Estructura del Proyecto

```
sistemadgestion5/
‚îú‚îÄ‚îÄ üìÑ index.php              # P√°gina principal
‚îú‚îÄ‚îÄ üìÑ login.php              # Sistema de autenticaci√≥n
‚îú‚îÄ‚îÄ üìÑ menu_principal.php     # Men√∫ principal del sistema
‚îú‚îÄ‚îÄ üìÇ database/              # Base de datos SQL
‚îÇ   ‚îú‚îÄ‚îÄ sistemadgestion5_completo_*.sql    # Estructura + datos
‚îÇ   ‚îú‚îÄ‚îÄ sistemadgestion5_estructura_*.sql  # Solo estructura
‚îÇ   ‚îî‚îÄ‚îÄ README.md                          # Documentaci√≥n de BD
‚îú‚îÄ‚îÄ üìÇ modulos/               # M√≥dulos del sistema
‚îÇ   ‚îú‚îÄ‚îÄ üìÅ admin/            # Administraci√≥n del sistema
‚îÇ   ‚îú‚îÄ‚îÄ üìÅ clientes/         # Gesti√≥n de clientes
‚îÇ   ‚îú‚îÄ‚îÄ üìÅ compras/          # Sistema de compras
‚îÇ   ‚îú‚îÄ‚îÄ üìÅ facturas/         # M√≥dulo de facturaci√≥n
‚îÇ   ‚îú‚îÄ‚îÄ üìÅ Inventario/       # Control de inventario
‚îÇ   ‚îú‚îÄ‚îÄ üìÅ pedidos/          # Gesti√≥n de pedidos
‚îÇ   ‚îî‚îÄ‚îÄ üìÅ productos/        # Cat√°logo de productos
‚îú‚îÄ‚îÄ üìÇ config/               # Archivos de configuraci√≥n
‚îú‚îÄ‚îÄ üìÇ ajax/                 # Endpoints AJAX
‚îú‚îÄ‚îÄ üìÇ assets/               # Recursos (CSS, JS, im√°genes)
‚îÇ   ‚îú‚îÄ‚îÄ üìÅ css/             # Hojas de estilo
‚îÇ   ‚îú‚îÄ‚îÄ üìÅ js/              # JavaScript
‚îÇ   ‚îú‚îÄ‚îÄ üìÅ img/             # Im√°genes del sistema
‚îÇ   ‚îú‚îÄ‚îÄ üìÅ uploads/         # Archivos subidos
‚îÇ   ‚îú‚îÄ‚îÄ üìÅ scanner_input/   # Input del esc√°ner
‚îÇ   ‚îî‚îÄ‚îÄ üìÅ scanner_processed/ # Archivos procesados
‚îî‚îÄ‚îÄ üìÇ docs/                 # Documentaci√≥n
```

## üéÆ Funcionalidades por M√≥dulo

### üì¶ Inventario
- Control de stock en tiempo real
- Alertas de stock m√≠nimo
- Esc√°ner de c√≥digos de barras
- Gesti√≥n de vencimientos
- M√∫ltiples ubicaciones

### üõí Compras
- Gesti√≥n completa de proveedores
- √ìrdenes de compra automatizadas
- Recepci√≥n de mercader√≠a
- Control de precios y cotizaciones
- Historial completo de compras

### üë• Clientes
- Registro completo de clientes
- Historial de compras y pagos
- Gesti√≥n de contactos
- Integraci√≥n con facturaci√≥n
- Reportes de clientes

### üìÑ Facturaci√≥n
- Generaci√≥n autom√°tica de facturas
- M√∫ltiples formatos (PDF, Excel)
- Control de pagos y cobranzas
- Reportes de ventas
- Integraci√≥n contable

## üîß Configuraci√≥n Avanzada

### Esc√°ner de C√≥digos de Barras
```javascript
// Configurar m√∫ltiples m√©todos de captura
const scanner = {
    webcam: true,      // C√°mara web
    mobile: true,      // Celular v√≠a WiFi  
    usb: true,         // Lector USB
    manual: true       // Entrada manual
};
```

### Reportes y Exportaci√≥n
```php
// Generar reporte Excel
$reporte = new ExcelGenerator();
$reporte->exportar('inventario', $filtros);
```

## üìä Base de Datos

La carpeta `database/` contiene:
- **sistemadgestion5_completo_*.sql**: Estructura completa + datos de ejemplo
- **sistemadgestion5_estructura_*.sql**: Solo estructura (instalaci√≥n limpia)
- **README.md**: Documentaci√≥n detallada de la base de datos

Ver [documentaci√≥n de base de datos](database/README.md) para m√°s detalles.

## ü§ù Contribuir

1. Fork el proyecto
2. Crear rama feature (`git checkout -b feature/nueva-funcionalidad`)
3. Commit cambios (`git commit -am 'Agregar nueva funcionalidad'`)
4. Push a la rama (`git push origin feature/nueva-funcionalidad`)
5. Crear Pull Request

## üìÑ Licencia

Este proyecto est√° bajo la Licencia MIT - ver el archivo [LICENSE](LICENSE) para detalles.

## üë®‚Äçüíª Desarrollado por

**Sistema de Gesti√≥n Empresarial**
- Desarrollado con ‚ù§Ô∏è para gesti√≥n empresarial eficiente
- Versi√≥n: 2.0.0
- Fecha: Agosto 2025

## üÜò Soporte y Documentaci√≥n

- **Documentaci√≥n**: [docs/](docs/)
- **Issues**: [GitHub Issues](https://github.com/tu-usuario/sistemadgestion5/issues)
- **Wiki**: [GitHub Wiki](https://github.com/tu-usuario/sistemadgestion5/wiki)

## üìà Roadmap

- [ ] API REST completa
- [ ] App m√≥vil
- [ ] Integraci√≥n con APIs de facturaci√≥n electr√≥nica
- [ ] Dashboard avanzado con gr√°ficos
- [ ] M√≥dulo de CRM
- [ ] Integraci√≥n con WhatsApp Business

---

‚≠ê **Si este proyecto te resulta √∫til, ¬°dale una estrella en GitHub!**

üöÄ **¬øNecesitas soporte profesional?** Contacta al equipo de desarrollo.
"@

$readmeGithub | Out-File -FilePath "$tempDir\README.md" -Encoding UTF8

# LICENSE
$license = @"
MIT License

Copyright (c) 2025 Sistema de Gesti√≥n Empresarial

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
"@

$license | Out-File -FilePath "$tempDir\LICENSE" -Encoding UTF8

# CHANGELOG.md
$changelog = @"
# Changelog

Todos los cambios notables de este proyecto ser√°n documentados en este archivo.

## [2.0.0] - 2025-08-08

### üéâ Agregado
- Sistema de esc√°ner universal (webcam, celular, USB, manual)
- Formulario avanzado de productos con 6 pesta√±as
- Sistema de permisos mejorado
- Soporte multi-moneda
- Dashboard con m√©tricas en tiempo real
- M√≥dulo de compras completo
- Sistema de facturaci√≥n
- Gesti√≥n avanzada de clientes
- Base de datos SQL incluida en el repositorio
- Documentaci√≥n completa para GitHub

### üöÄ Mejorado
- Rendimiento general del sistema
- Interfaz responsive con Bootstrap 5.3
- Operaciones AJAX optimizadas
- Reportes Excel y PDF mejorados
- Estructura de carpetas organizada

### üêõ Corregido
- Problemas de autenticaci√≥n
- Validaciones de formularios
- B√∫squedas y filtros
- Operaciones de base de datos

### üìö Documentaci√≥n
- README.md completo para GitHub
- Documentaci√≥n de base de datos
- Gu√≠as de instalaci√≥n
- Estructura del proyecto documentada

## [1.0.0] - 2025-01-01

### üéâ Inicial
- Lanzamiento inicial del sistema
- M√≥dulos b√°sicos de inventario
- Sistema de usuarios
- Reportes b√°sicos
"@

$changelog | Out-File -FilePath "$tempDir\CHANGELOG.md" -Encoding UTF8

Write-Host "Creando estructura de carpetas adicionales..." -ForegroundColor Yellow

# Crear carpetas vacias necesarias con archivos .gitkeep
@("assets/uploads", "assets/scanner_input", "assets/scanner_processed") | ForEach-Object {
    $carpeta = "$tempDir/$_"
    if (-not (Test-Path $carpeta)) {
        New-Item -ItemType Directory -Path $carpeta -Force | Out-Null
    }
    "# Esta carpeta es necesaria para el funcionamiento del sistema" | Out-File -FilePath "$carpeta/.gitkeep" -Encoding UTF8
}

Write-Host "Comprimiendo archivos..." -ForegroundColor Yellow

# Crear el ZIP
try {
    Compress-Archive -Path "$tempDir\*" -DestinationPath $archivoZip -Force
    Write-Host "ZIP creado exitosamente" -ForegroundColor Green
} catch {
    Write-Host "Error al crear ZIP: $($_.Exception.Message)" -ForegroundColor Red
}

# Limpiar carpeta temporal
Remove-Item -Path $tempDir -Recurse -Force

# Obtener informacion del ZIP
if (Test-Path $archivoZip) {
    $infoZip = Get-Item $archivoZip
    $tamanoMB = [math]::Round($infoZip.Length / 1MB, 2)

    Write-Host ""
    Write-Host "üéâ ZIP COMPLETO PARA GITHUB CREADO" -ForegroundColor Green
    Write-Host "===================================" -ForegroundColor Green
    Write-Host ""
    Write-Host "üì¶ Archivo: $archivoZip" -ForegroundColor White
    Write-Host "üìç Ubicacion: $(Get-Location)\$archivoZip" -ForegroundColor White  
    Write-Host "üìä Tama√±o: $tamanoMB MB" -ForegroundColor White
    Write-Host ""
    Write-Host "‚úÖ INCLUYE:" -ForegroundColor Cyan
    Write-Host "- ‚úÖ Codigo fuente completo" -ForegroundColor White
    Write-Host "- ‚úÖ Base de datos SQL (estructura + datos)" -ForegroundColor White
    Write-Host "- ‚úÖ Documentacion completa para GitHub" -ForegroundColor White
    Write-Host "- ‚úÖ README.md profesional con badges" -ForegroundColor White
    Write-Host "- ‚úÖ LICENSE (MIT)" -ForegroundColor White
    Write-Host "- ‚úÖ CHANGELOG.md" -ForegroundColor White
    Write-Host "- ‚úÖ .gitignore configurado" -ForegroundColor White
    Write-Host "- ‚úÖ Estructura de carpetas lista" -ForegroundColor White
    Write-Host ""
    Write-Host "üöÄ LISTO PARA SUBIR A GITHUB!" -ForegroundColor Magenta
}

Write-Host ""
Write-Host "üìã INSTRUCCIONES PARA SUBIR A GITHUB:" -ForegroundColor Yellow
Write-Host "=====================================" -ForegroundColor Yellow
Write-Host "1. Crear repositorio en GitHub" -ForegroundColor White
Write-Host "2. Extraer el ZIP en una carpeta nueva" -ForegroundColor White
Write-Host "3. git init" -ForegroundColor White
Write-Host "4. git add ." -ForegroundColor White
Write-Host "5. git commit -m 'Initial commit: Sistema completo'" -ForegroundColor White
Write-Host "6. git remote add origin https://github.com/usuario/repo.git" -ForegroundColor White
Write-Host "7. git push -u origin main" -ForegroundColor White
